.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SPASS 1"
.TH SPASS 1 "2010-03-18" "perl v5.10.0" "SPASS"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SPASS \- automated theorem prover for full first\-order logic with equality
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1SPASS\s0 [\fBoptions\fR] [\fIinputfile\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1SPASS\s0 is an automated theorem prover for full sorted first-order logic with equality
that extends superposition by sorts and a splitting rule for case analysis.
\&\s-1SPASS\s0 can also be used as a modal logic and description logic theorem prover.
.SH "OPTIONS"
.IX Header "OPTIONS"
Command line options in \s-1SPASS\s0 are implemented via modifications to the \s-1GNU\s0 command
line option package for C. Just giving the option sets its value to 1 and means enabling
the option. In order to disable
an option the value has to be set to 0 by declaring \-\fIOption\fR=0.
The following options are currently supported by \s-1SPASS:\s0
.IP "\-Auto" 4
.IX Item "-Auto"
Enables/disables the auto mode where \s-1SPASS\s0 configures itself automatically.
The inference/reduction rules, the sort technology, the ordering and precedence
as well as the splitting and selection strategy are set.
In auto mode \s-1SPASS\s0 is complete. Mixing the auto mode with user defined options
may destroy completeness.
Default is 1.
.IP "\-Stdin" 4
.IX Item "-Stdin"
Enables/disables input in \s-1SPASS\s0 via stdin. The file argument is ignored. Default is 0.
.IP "\-Interactive" 4
.IX Item "-Interactive"
Enables/disables the interactive mode. First, \s-1SPASS\s0 is given a set of axioms and then
the prover accepts subsequent proof tasks. Default is 0.
.IP "\-Flotter" 4
.IX Item "-Flotter"
Enables/disables the \s-1CNF\s0 translation mode of \s-1SPASS\s0. If the option is set, \s-1SPASS\s0 only
performs a clause normal form translation. If no output file argument is given
\&\s-1SPASS\s0 prints the \s-1CNF\s0 to stdout. Default is 0.
.IP "\-SOS" 4
.IX Item "-SOS"
Enables/disables the set of support strategy. Default is 0.
.IP "\-Splits=\fIn\fR" 4
.IX Item "-Splits=n"
Sets the number of possible splitting applications to \fIn\fR. If \fIn\fR=\-1 then
the number of splits is not limited. Default is 0.
.IP "\-Memory=\fIn\fR" 4
.IX Item "-Memory=n"
Sets the amount of memory available to \s-1SPASS\s0 for the proof search to \fIn\fR bytes. 
The memory needed to startup \s-1SPASS\s0 cannot be restricted.
Default is \-1 meaning that memory allocations is only restricted by available memory.
.IP "\-TimeLimit=\fIn\fR" 4
.IX Item "-TimeLimit=n"
Sets a time limit for the proof search to \fIn\fR seconds. Default is \-1 meaning that
\&\s-1SPASS\s0 may run forever. The time limit is polled when \s-1SPASS\s0 selects a new clause for
inferences. If a single inference step causes an explosion to the number of generated
clauses it may therefore happen that a given time limit is significantly exceeded.
.IP "\-DocSST" 4
.IX Item "-DocSST"
Enables/disables documentation output for static soft typing. 
The used sort theory as well as the (failed) proof attempt for
the sort constraint is printed.
Default is 0.
.IP "\-DocProof" 4
.IX Item "-DocProof"
Enables/disables proof documentation. If \s-1SPASS\s0 finds a proof it is eventually
printed. If \s-1SPASS\s0 finds a saturation, the saturated set of clauses is eventually printed.
Enabling proof documentation may significantly decrease \s-1SPASS\s0's performance, because
the prover must store clauses that can be thrown away otherwise. Default is 0.
.IP "\-DocSplit" 4
.IX Item "-DocSplit"
Sets the documentation of split backtracking steps. If set to 1, the
current backtracking level is printed. If set to 2, it also prints in case
of a split backtrack the backtracked clauese.
Default is 0.
.IP "\-Loops" 4
.IX Item "-Loops"
Sets the maximal number of mainloop iterations for \s-1SPASS\s0.
Default is \-1.
.IP "\-PSub" 4
.IX Item "-PSub"
Enables/disables printing of subsumed clauses.
Default is 0.
.IP "\-PRew" 4
.IX Item "-PRew"
Enables/disables printing of simple rewrite applications.
Default is 0.
.IP "\-PCon" 4
.IX Item "-PCon"
Enables/disables printing of condensation applications.
Default is 0.
.IP "\-PTaut" 4
.IX Item "-PTaut"
Enables/disables printing of tautology deletion applications.
Default is 0.
.IP "\-PObv" 4
.IX Item "-PObv"
Enables/disables printing of obvious reduction applications.
Default is 0.
.IP "\-PSSi" 4
.IX Item "-PSSi"
Enables/disables printing of sort simplification applications.
Default is 0.
.IP "\-PSST" 4
.IX Item "-PSST"
Enables/disables printing of static soft typing applications.
All deleted clauses are printed.
Default is 0.
.IP "\-PMRR" 4
.IX Item "-PMRR"
Enables/disables printing of matching replacement resolution applications.
Default is 0.
.IP "\-PUnC" 4
.IX Item "-PUnC"
Enables/disables printing of unit conflict applications.
Default is 0.
.IP "\-PAED" 4
.IX Item "-PAED"
Enables/disables printing of clauses where redundant
equations have been removed (assignment equation deletion).
.IP "\-PDer" 4
.IX Item "-PDer"
Enables/disables printing of clauses derived by inferences.
Default is 0.
.IP "\-PGiven" 4
.IX Item "-PGiven"
Enables/disables printing of the given clause, selected
to perform inferences.
Default is 0.
.IP "\-PLabels" 4
.IX Item "-PLabels"
Enables/disables printing of labels. If the \-DocProof is
set and no labels for formulae are provided by the input,
\&\s-1SPASS\s0 generates generic labels that are then printed by enabling this option.
Default is 0.
.IP "\-PKept" 4
.IX Item "-PKept"
Enables/disables printing of kept clauses. These are clauses
generated by inferences (backtracking) that are not redundant.
Clauses derived during input reduction/saturation are not printed.
Default is 0.
.IP "\-PProblem" 4
.IX Item "-PProblem"
Enables/disables printing of the input clause set.
Default is 1.
.IP "\-PEmptyClause" 4
.IX Item "-PEmptyClause"
Enables/disables printing of derived empty clauses.
Default is 0.
.IP "\-PStatistic" 4
.IX Item "-PStatistic"
Enables/disables printing of a final statistics on derived/backtracked/kept clauses, performed splits,
used time and used space.
Default is 1.
.IP "\-FPModel" 4
.IX Item "-FPModel"
Enables/disables the output of an eventually found model to a file. If set
to 1, all clauses in the final set are printed. If set to 2, only
potentially productive clauses are printed, that are clauses with no selected
negative literal and a maximal positive one. If <problemfile> is the name
of the input problem and the eventually generated set is saturated, the
saturation is printed to the file <problemfile>.model, for otherwise
to <problemfile>.clauses. The latter case may, e.g., be caused by a time limit.
Default is 0.
.IP "\-FPDFGProof" 4
.IX Item "-FPDFGProof"
Enables/disables the output of an eventually found proof to a file. Using this
option requires to set the option \-DocProof. If <problemfile> is the name
of the input problem the proof is printed to <problemfile>.prf.
Default is 0.
.IP "\-PFlags" 4
.IX Item "-PFlags"
Enables/disables the output of all flag values. The flag settings are
printed at the end of a \s-1SPASS\s0 run in form of a DFG-Syntax input section.
Default is 0.
.IP "\-POptSkolem" 4
.IX Item "-POptSkolem"
Enables/disables the output of optimized Skolemization applications.
Default is 0.
.IP "\-PStrSkolem" 4
.IX Item "-PStrSkolem"
Enables/disables the output of strong Skolemization applications.
Default is 0.
.IP "\-PBDC" 4
.IX Item "-PBDC"
Enables/disables the output of clauses deleted because of
bound restrictions. 
Default is 0.
.IP "\-PBInc" 4
.IX Item "-PBInc"
Enables/disables the output of bound restriction changes. 
Default is 0.
.IP "\-PApplyDefs" 4
.IX Item "-PApplyDefs"
Enables/disables printing of expansions of atom definitions.
Default is 0.
.IP "\-Select" 4
.IX Item "-Select"
Sets the selection strategy for \s-1SPASS\s0. If set to 0 no selection
of negative literals is done. If set to any other value, at most
one negative literal in a clause is selected. If set to 1 negative 
literals in clauses with more than one maximal literal are selected.
Either a negative literal with a predicate from the selection list (see below) is chosen
or if no such negative literal is available, a negative literal with maximal weight is chosen.
If set to 2 negative literals are always selected. Again,
either a negative literal with a predicate from the selection list (see below) is chosen
or if no such negative literal is available, a negative literal with maximal weight is chosen.
The latter case results
in an ordered hyperresolution like behavior of ordered resolution.
If set to 3 any negative literal with a predicate specified by the selection list (see below)
is selected.
Default is 1.
.IP "\-RInput" 4
.IX Item "-RInput"
Enables/disables the reduction of the initial clause set.
Default is 1.
.IP "\-Sorts" 4
.IX Item "-Sorts"
Determines the monadic literals that built the sort constraint
for the initial clause set.
If set to 0, no sort constraint is built. If set to 1, all negative
monadic literals with a variable as argument form the sort constraint.
If set to 2, all negative monadic literals form the sort constraint.
Setting \-Sorts to 2 may harm completeness, since sort constraints are
subject to the basic strategy and to static soft typing.
Default is 1.
.IP "\-SatInput" 4
.IX Item "-SatInput"
Enables/disables input saturation. The saturation is incomplete
but is guaranteed to terminate.
Default is 0.
.IP "\-WDRatio" 4
.IX Item "-WDRatio"
Sets the ratio between given clauses selected by
weight or the depth in the search space. The weight is the
sum of all symbol weights determined by the \-FuncWeight and
\&\-VarWeight options. The depth of all initial clauses is 0 and
clauses generated by inferences get the maximal depth of a parent
clause plus 1.
Default is 5, meaning
that 4 clauses are selected by weight and the fifth clause is
selected by depth.
.IP "\-PrefCon" 4
.IX Item "-PrefCon"
Sets the ratio to compute the weight for conjecture clauses
and therefore allows to prefer those. Default is 0 meaning that
the weight computation for conjecture clauses is not changed.
.IP "\-FullRed" 4
.IX Item "-FullRed"
Enables/disables full reduction. If set to 0, only the set of worked
off clauses is completely inter-reduced. If set to 1, all currently
hold clauses (worked off and usable) are completely inter-reduced.
Default is 1.
.IP "\-FuncWeight" 4
.IX Item "-FuncWeight"
Sets the weight of function/predicate symbols. The weight of
clauses is the sum of all symbol weights. This weight is considered
for the selection of the given clause. Default is 1.
.IP "\-VarWeight" 4
.IX Item "-VarWeight"
Sets the weight of variable symbols (see \-FuncWeight).
Default is 1.
.IP "\-PrefVar" 4
.IX Item "-PrefVar"
Enables/disables the preference for clauses with many variables.
While clauses are selected by weight, if this option is set and
two clauses have the same weight, the clause with more variable
occurrences is preferred.
Default is 0.
.IP "\-BoundMode" 4
.IX Item "-BoundMode"
Selects the mode for bound restrictions. Mode 0 means no
restriction, if set to 1 all newly generated clauses are restricted by weight
(see \-BoundStart) and if set to 2 clauses are restricted
by depth. Default is 0.
.IP "\-BoundStart" 4
.IX Item "-BoundStart"
The start restriction of the selected bound mode. For example,
if bound mode is 1 and bound start set to 5, all clauses with
a weight larger than 5 are deleted until the set is saturated.
This causes an increase of the used bound value that is
determined by the minimal increase saving a before deleted
clause. Default is \-1 meaning no bound restriction.
.IP "\-BoundLoops" 4
.IX Item "-BoundLoops"
The number of loops applying the actions restrictions/increasing bound.
If the number of loops is exceeded all bound restrictions are
cancelled. Default is 1.
.IP "\-ApplyDefs" 4
.IX Item "-ApplyDefs"
Sets the maximal number of applications of atom definitions to input formulae.
Default is 0, meaning no applications at all.
.IP "\-Ordering" 4
.IX Item "-Ordering"
Sets the term ordering. If 0 then \s-1KBO\s0 is selected,
if 1 the \s-1RPOS\s0 is selected. Default is 0.
.IP "\-CNFQuantExch" 4
.IX Item "-CNFQuantExch"
If set, non-constant Skolem terms in the clausal form of the
conjecture are replaced by constants.
Will automatically be set for the optimized functional translation of
modal or description logic formulae.
Default is 0.
.IP "\-CNFOptSkolem" 4
.IX Item "-CNFOptSkolem"
Enables/disables optimized Skolemization.
Default is 1.
.IP "\-CNFStrSkolem" 4
.IX Item "-CNFStrSkolem"
Enables/disables Strong Skolemization.
Default is 1.
.IP "\-CNFProofSteps" 4
.IX Item "-CNFProofSteps"
Sets the maximal number of proof steps
in an optimized Skolemization proof attempt.
Default is 100.
.IP "\-CNFSub" 4
.IX Item "-CNFSub"
Enables/disables subsumption on the clauses generated by the \s-1CNF\s0 procedure.
Default is 1.
.IP "\-CNFCon" 4
.IX Item "-CNFCon"
Enables/disables condensing on the clauses generated by the \s-1CNF\s0 procedure.
Default is 1.
.IP "\-CNFRedTime" 4
.IX Item "-CNFRedTime"
Sets the overall amount of time in seconds to be spend on reduction during
\&\s-1CNF\s0 transformation. Affected reductions are optimized Skolemization, condensing,
and subsumption. Default is \-1 meaning that the reduction time is not limited
at all.
.IP "\-CNFRenaming" 4
.IX Item "-CNFRenaming"
Enables/disables formula renaming.
If set to 1 optimized renaming is enabled that minimizes
the number of eventually generated clauses.
If set to 2 complex renaming is enabled that introduces a
new Skolem predicate for every complex  formula, i.e., any
formula that is not a literal.
If set to 3 quantification renaming is enabled that introduces
a new Skolem predicate for every subformula starting with
a quantifier.
Default is 1.
.IP "\-CNFRenMatch" 4
.IX Item "-CNFRenMatch"
If set, renaming variant subformulae are replaced by the same
Skolem literal.
Default is 1.
.IP "\-CNFPRenaming" 4
.IX Item "-CNFPRenaming"
Enables/disables the printing of formula renaming applications.
Default is 0.
.IP "\-CNFFEqR" 4
.IX Item "-CNFFEqR"
Enables/disables certain equality reduction techniques
on the formula level. Default is 1.
.IP "\-IEmS" 4
.IX Item "-IEmS"
Enables/disables the inference rule Empty Sort.
Default is 0.
.IP "\-ISoR" 4
.IX Item "-ISoR"
Enables/disables the inference rule Sort Resolution.
Default is 0.
.IP "\-IEqR" 4
.IX Item "-IEqR"
Enables/disables the inference rule Equality Resolution.
Default is 0.
.IP "\-IERR" 4
.IX Item "-IERR"
Enables/disables the inference rule Reflexivity Resolution.
Default is 0.
.IP "\-IEqF" 4
.IX Item "-IEqF"
Enables/disables the inference rule Equality Factoring.
Default is 0.
.IP "\-IMPm" 4
.IX Item "-IMPm"
Enables/disables the inference rule Merging Paramodulation.
Default is 0.
.IP "\-ISpR" 4
.IX Item "-ISpR"
Enables/disables the inference rule Superposition Right.
Default is 0.
.IP "\-IOPm" 4
.IX Item "-IOPm"
Enables/disables the inference rule Ordered Paramodulation.
Default is 0.
.IP "\-ISPm" 4
.IX Item "-ISPm"
Enables/disables the inference rule Standard Paramodulation.
Default is 0.
.IP "\-ISpL" 4
.IX Item "-ISpL"
Enables/disables the inference rule Superposition Left.
Default is 0.
.IP "\-IORe" 4
.IX Item "-IORe"
Enables/disables the inference rule Ordered Resolution.
If set to 1, Ordered Resolution is enabled but no resolution
inferences with equations are generated. If set to 2, equations
are considered for Ordered Resolution steps as well.
Default is 0.
.IP "\-ISRe" 4
.IX Item "-ISRe"
Enables/disables the inference rule Standard Resolution.
If set to 1, Standard Resolution is enabled but no resolution
inferences with equations are generated. If set to 2, equations
are considered for Standard Resolution steps as well.
Default is 0.
.IP "\-ISHy" 4
.IX Item "-ISHy"
Enables/disables the inference rule Standard Hyper-Resolution.
Default is 0.
.IP "\-IOHy" 4
.IX Item "-IOHy"
Enables/disables the inference rule Ordered Hyper-Resolution.
Default is 0.
.IP "\-IURR" 4
.IX Item "-IURR"
Enables/disables the inference rule Unit Resulting Resolution.
Default is 0.
.IP "\-IOFc" 4
.IX Item "-IOFc"
Enables/disables the inference rule Ordered Factoring.
If set to 1, Ordered Factoring is enabled but only factoring
inferences with positive literals are generated. If set to 2,
negative literals are considered for inferences as well.
Default is 0.
.IP "\-ISFc" 4
.IX Item "-ISFc"
Enables/disables the inference rule Standard Factoring.
Default is 0.
.IP "\-IUnR" 4
.IX Item "-IUnR"
Enables/disables the inference rule Unit Resolution.
Default is 0.
.IP "\-IBUR" 4
.IX Item "-IBUR"
Enables/disables the inference rule Bounded Depth Unit Resolution.
Default is 0.
.IP "\-IDEF" 4
.IX Item "-IDEF"
Enables/disables the inference rule Apply Definitions.
Currently not supported.
Default is 0.
.IP "\-RFRew" 4
.IX Item "-RFRew"
Enables/disables the reduction rule Forward Rewriting.
If set to 1 unit rewriting and non-unit rewriting based on
a subsumption test is activated.
If set to 2 in addition to unit and non-unit rewriting
local contextual rewriting is activated.
If set to 3 in  addition to unit and non-unit rewriting
subterm contextual rewriting is activiated. Subterm contextual
rewriting subsumes local contextual rewriting.
If set to 4 in addition of the rewriting rules of 3, subterm
contextual rewriting also tests for negative literal elimination.
Default is 0.
.IP "\-RBRew" 4
.IX Item "-RBRew"
Enables/disables the reduction rule Backward Rewriting.
Same values and meaning as for flag \-RFRew but used in backward direction.
Default is 0.
.IP "\-RFMRR" 4
.IX Item "-RFMRR"
Enables/disables the reduction rule Forward Matching Replacement Resolution.
Default is 0.
.IP "\-RBMRR" 4
.IX Item "-RBMRR"
Enables/disables the reduction rule Backward Matching Replacement Resolution.
Default is 0.
.IP "\-RObv" 4
.IX Item "-RObv"
Enables/disables the reduction rule Obvious Reduction.
Default is 0.
.IP "\-RUnC" 4
.IX Item "-RUnC"
Enables/disables the reduction rule Unit Conflict.
Default is 0.
.IP "\-RTer" 4
.IX Item "-RTer"
Enables/disables the terminator by setting the maximal number
of non-unit clauses to be used during the search.   
Default is 0.
.IP "\-RTaut" 4
.IX Item "-RTaut"
Enables/disables the reduction rule Tautology Deletion. If
set to 1, only syntactic tautologies are detected and
deleted. If
set to 2, additionally semantic tautologies are removed.
Default is 0.
.IP "\-RSST" 4
.IX Item "-RSST"
Enables/disables the reduction rule Static Soft Typing.
Default is 0.
.IP "\-RSSi" 4
.IX Item "-RSSi"
Enables/disables the reduction rule Sort Simplification.
Default is 0.
.IP "\-RFSub" 4
.IX Item "-RFSub"
Enables/disables the reduction rule Forward Subsumption Deletion.
Default is 0.
.IP "\-RBSub" 4
.IX Item "-RBSub"
Enables/disables the reduction rule Backward Subsumption Deletion.
Default is 0.
.IP "\-RAED" 4
.IX Item "-RAED"
Enables/disables the reduction rule Assignment Equation Deletion.
This rule removes particular occurrences of equations from clauses.
If set to 1, the reduction is guaranteed to be sound.
If set to 2, the reduction is only sound if any potential model
of the considered problem has a non-trivial domain.
Default is 0.
.IP "\-RCon" 4
.IX Item "-RCon"
Enables/disables the reduction rule Condensation.
Default is 0.
.IP "\-TDfg2OtterOptions" 4
.IX Item "-TDfg2OtterOptions"
Enables/disables the inclusion of an Otter options
header. This option only applies to dfg2otter. If
set to 1 it includes a setting that makes Otter nearly
complete. If set to 2 it activates auto modus and if
set to 3 it activates the auto2 modus.
Default is 0.
.IP "\-EML" 4
.IX Item "-EML"
A special \s-1EML\s0 flag for modal logic or description logic formulae.
Never needs to be set explicitly.  Is set during parsing.
.IP "\-EMLAuto" 4
.IX Item "-EMLAuto"
Intended for \s-1EML\s0 Autonomous mode, as yet not functional.
Default is 0.
.IP "\-EMLTranslation" 4
.IX Item "-EMLTranslation"
Determines the translation method used
for modal logic or description logic formulae.
If set to 0, the standard relational translation method (which
is determined by the usual Kripke semantics) is used.
If set to 1, the functional translation method is used.
If set to 2, the optimised functional translation method is used.
If set to 3, the semi-functional translation method is used.
A variation of the optimised functional translation method is used, when
the following settings are specified: \-EMLTranslation=2 \-EMLFuncNary=1.
The translation will be in terms of n\-ary predicates instead of unary
predicates and paths.
In the current implementation the standard relational translation method
is most general. Some
restrictions apply to the other methods. The functional translation
method and semi-functional translation methods are available only for
the basic multi-modal logic K(m) possibly with serial (total) modalities
(\-EMLTheory=1), plus nominals (ABox statements), terminological axioms
and general inclusion and equivalence axioms. The optimised functional
translation methods are implemented only for K(m), possibly with serial
modalities.
Default is 0.
.IP "\-EML2Rel" 4
.IX Item "-EML2Rel"
If set, propositional/Boolean\-type formulae are converted to relational formulae
before they are translated to first-order logic.
Default is 0.
.IP "\-EMLTheory" 4
.IX Item "-EMLTheory"
Determines which background theory is assumed.
If set to 0, the background theory is empty.
If set to 1, then seriality (the background theory for \s-1KD\s0) is added for
all modalities. 
If set to 2, then reflexivity (the background theory for \s-1KT\s0) is added for
all modalities. 
If set to 3, then symmetry (the background theory for \s-1KB\s0) is added for
all modalities. 
If set to 4, then transitivity (the background theory for K4) is added for
all modalities. 
If set to 5, then Euclideanness (the background theory for K5) is added for
all modalities. 
If set to 6, then transitivity and Euclideanness (the background theory
for S4) is added for all modalities. 
If set to 7, then reflexivity, transitivity and Euclideanness (the
background theory for S5) is added for all modalities. 
Default is 0.
.IP "\-EMLFuncNdeQ" 4
.IX Item "-EMLFuncNdeQ"
If set, diamond formulae are translated according to
tr(dia(phi),s) = nde(s) /\e exists x tr(phi,[s x])
(a nde / quantifier formula),
otherwise the translation is in accordance with
tr(dia(phi),s) = exists x nde(s) /\e tr(phi,[s x])
(a quantifier / nde formula).  
The transltion for box formulae is defined dually.
Setting this flag is only meaningful when the flag for the functional or
semi functional translation method is set.
Default is 1.
.IP "\-EMLFuncNary" 4
.IX Item "-EMLFuncNary"
If set, the functional translation into fluted logic is used.
This means n\-ary predicate symbols are used instead of unary predicate
symbols and paths.
Setting this flag is only meaningful for testing local
satisfiability/validity in multi-modal K.
Default is 0.
.IP "\-EMLFFSorts" 4
.IX Item "-EMLFFSorts"
If set, sorts for terms are used.
Default is 0.
.IP "\-EMLElimComp" 4
.IX Item "-EMLElimComp"
If set, try to eliminate relational composition in modal parameters.
Default is 0.
.IP "\-EMLPTrans" 4
.IX Item "-EMLPTrans"
If set, the \s-1EML\s0 to first-order logic translation is documented.
Default is 0.
.IP "\-TPTP" 4
.IX Item "-TPTP"
If set, \s-1SPASS\s0 expects an input file in \s-1TPTP\s0 syntax.
Default is 0.
.IP "\-rf" 4
.IX Item "-rf"
If set, \s-1SPASS\s0 deletes the input file before termination.
Default is 0.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To run \s-1SPASS\s0 on a single file without options:
.PP
.Vb 1
\&        SPASS  I<filename>
.Ve
.PP
To disable all \s-1SPASS\s0 output except for the final result:
.PP
.Vb 1
\&        SPASS  \-PGiven=0 \-PProblem=0 I<filename>
.Ve
.SH "NOTES"
.IX Header "NOTES"
You can also specify options for \s-1SPASS\s0 in the input problem.
In the \s-1DFG\s0 syntax, you would use
.PP
.Vb 5
\&        list_of_settings(SPASS).
\&        {*
\&          set_flag(DocProof,1).
\&        *}
\&        end_of_list.
.Ve
.PP
to set the DocProof flag.
.PP
There are three types of options you can set in the input:
.IP "set_flag(<flag>,<value>)." 4
.IX Item "set_flag(<flag>,<value>)."
Sets a flag to a value. Valid flags and values are described
in the \s-1OPTIONS\s0 section.
.IP "set_precedence(<comma\-separated list of function and/or predicate symbols>)." 4
.IX Item "set_precedence(<comma-separated list of function and/or predicate symbols>)."
Sets the precedence for the listed symbols. The precedence is
decreasing from left to right, i.e. the leftmost symbol has
the highest precedence.
.Sp
Every entry in the list has the form
.Sp
.Vb 1
\&        SYMBOL | (SYMBOL, WEIGHT [, {l, r, m}])
.Ve
.Sp
You can use the second form to assign weights to symbols (for \s-1KBO\s0) or a
status (for \s-1RPOS\s0). Status is either \f(CW@t\fR{l} for left-to-right, \f(CW@t\fR{m} for
multiset, or \f(CW@t\fR{r} for right-to-left. Weight is given as an integer.
.IP "set_DomPred(<comma\-separated list of predicate symbols>)." 4
.IX Item "set_DomPred(<comma-separated list of predicate symbols>)."
Listed predicate (\fIDomPred\fR for dominant predicate) symbols are
first ordered according to their precedence, not according to
their argument lists. Only in case of equal predicates, the
arguments are examined. For example, if we add the option
.Sp
.Vb 1
\&        set_DomPred(P).
.Ve
.Sp
then in the clause
.Sp
.Vb 1
\&         \-> R(f(x,y),a), P(x,a).
.Ve
.Sp
the atom \fIP(x,a)\fR is strictly maximal.
Predicates listed by the \fIset_DomPred\fR option are
compared according to the precedence.
.IP "set_selection(<comma\-separated list of predicate symbols>)." 4
.IX Item "set_selection(<comma-separated list of predicate symbols>)."
Sets the selection list that can be employed by the Select flag (see above).
.IP "set_ClauseFormulaRelation(<comma separated list auf tuples (<clause number>, sequence of axiom name strings))." 4
.IX Item "set_ClauseFormulaRelation(<comma separated list auf tuples (<clause number>, sequence of axiom name strings))."
This list is in particular set by \s-1FLOTTER\s0 and enables \s-1SPASS\s0 for an eventually found proof to show
the relation between the clauses used in the proof and the input formulas.
If combined with option DocProof, then there needs to be an entry for every clause number.
Otherwise an error is reported.
.Sp
.Vb 1
\&        set_ClauseFormulaRelation((1,ax2),(2,ax1),(3,ax3,ax1)).
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIcheckstat\fR\|(1), \fIfilestat\fR\|(1), \fIpcs\fR\|(1), \fIpgen\fR\|(1), \fIrescmp\fR\|(1), \fItpform\fR\|(1), \fItpget\fR\|(1), \fIdeprose\fR\|(1), \fIdfg2otter\fR\|(1), \fIdfg2otterpl\fR\|(1), \fIdfg2dfg\fR\|(1)
.SH "AUTHORS"
.IX Header "AUTHORS"
Contact : spass@mpi\-inf.mpg.de
