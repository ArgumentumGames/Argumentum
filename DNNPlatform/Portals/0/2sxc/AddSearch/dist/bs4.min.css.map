{"version":3,"sources":["A:\\2sxc Apps Dev\\Web\\Portals\\2search\\2sxc\\AddSearch/src\\styles\\_style.scss","A:\\2sxc Apps Dev\\Web\\Portals\\2search\\2sxc\\AddSearch/..\\..\\..\\_default\\Skins\\2sxcBootstrap-B4\\src\\scss\\_variables.scss","A:\\2sxc Apps Dev\\Web\\Portals\\2search\\2sxc\\AddSearch/..\\..\\..\\_default\\Skins\\2sxcBootstrap-B4\\node_modules\\bootstrap\\scss\\mixins\\_breakpoints.scss"],"names":[],"mappings":"AAMA,WACE,6CAGM,eAAgB,CAHtB,4BAQI,oBCHiB,CDIjB,eAAgB,CATpB,uBAaI,oBAAoB,CAbxB,2DAiBM,yBAA2B,CAC5B,uCAQD,sBAAuB,CAF3B,oDAMI,sCAAuC,CAN3C,0DAQM,+BAAgC,CARtC,+EAYM,yCAAqD,CACrD,6BAA8B,CAC9B,yBAA0B,CA+B3B,CEhBH,yBF7BF,+EAiBQ,6BAA8B,CAC9B,0BAA2B,CA2B9B,CAtEP,WAyBE,wKAuBQ,oBAAqB,CACrB,yBAA6B,CAK9B,CEAL,yBF7BF,wKA2BU,wBAAyB,CAE5B,CEAL,yBF7BF,iFAiCU,wBAAyB,CACzB,0BAA2B,CAU9B,CArET,WAyBE,mGAsCU,uBAAyB,CAK1B,CEdP,yBF7BF,mGAwCY,iBAAkB,CAClB,oBAAqB,CAExB,CEdP,yBF7BF,yCAkDM,qBAAsB,CACtB,wBAAyB,CACzB,0BAA2B,CAC3B,wBAAyB,CACzB,+BAAgC,CACjC","file":"bs4.min.css","sourcesContent":["//\r\n// This SCSS generates the css for the general styles\r\n//\r\n// It is used by all CSS generators (Bootstrap3/4, etc.)\r\n// To keep things simple, it uses the standard variables of\r\n// bootstrap 4 conventions.\r\n@media all {\r\n  .app-add-search{\r\n    &.app-add-search-desktop {\r\n      input {\r\n        max-width: 180px;\r\n      }\r\n    }\r\n\r\n    input:focus {\r\n      border-color: $primary;\r\n      box-shadow: none;\r\n    }\r\n\r\n    button {\r\n      border-color:#ced4da;\r\n\r\n      &:focus,\r\n      &:active {\r\n        box-shadow: none !important;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /*Styling Search Results*/\r\n  #addsearch-results {\r\n    #addsearch-logo-img {\r\n      display: none!important;\r\n    }\r\n\r\n    .addsearch-result-item-container {\r\n      transition: background-color .3s linear;\r\n      &:hover {\r\n        background-color: #eee!important;\r\n      }\r\n\r\n      .addsearch-result-item-sub {\r\n        border-bottom: 1px solid rgb(236, 236, 236)!important;\r\n        padding-bottom: 10px!important;\r\n        padding-top: 5px!important;\r\n\r\n        @include media-breakpoint-up(md) {\r\n          padding-bottom: 20px!important;\r\n          padding-top: 10px!important;\r\n        }\r\n\r\n        h1 a,\r\n        h2 a {\r\n          color: #333!important;\r\n          font-weight: normal!important;\r\n\r\n          @include media-breakpoint-up(md) {\r\n            font-size: 20px!important;\r\n          }\r\n        }\r\n\r\n        p {\r\n          @include media-breakpoint-up(md) {\r\n            font-size: 16px!important;\r\n            line-height: 20px!important;\r\n          }\r\n\r\n          span.document_url {\r\n            color: $primary!important;\r\n            @include media-breakpoint-up(md) {\r\n              font-style: normal;\r\n              word-wrap: break-word;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    @include media-breakpoint-up(md) {\r\n      #addsearch-fuzzy span {\r\n        height: 20px!important;\r\n        font-size: 14px!important;\r\n        line-height: 14px!important;\r\n        background-color: #f7f7f7;\r\n        border-bottom: 2px solid #ececec;\r\n      }\r\n    }\r\n  }\r\n}","ï»¿// ----------------------------------------------------------------------------------------------------\r\n// 1. Load Bootstrap 4 Helpers\r\n@import \"../../node_modules/bootstrap/scss/functions\";\r\n@import \"../../node_modules/bootstrap/scss/mixins\";\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// 2. Set Bootstrap Core Variables Presets\r\n// These variables should be set before we load the standard bootstrap variables\r\n// Bootstrap will keep what we set here, and only set variables we have not defined yet\r\n\r\n// 2.1 Set primary and secondary color - used all over the theme\r\n$primary:       #65345c;\r\n$secondary:     #6c757d;\r\n\r\n// 2.2 set Body colors\r\n$body-bg:       #efefef;\r\n$body-color:    #222222;\r\n\r\n\r\n// 2.3 Custom Bootstrap Instant 4 Theme variables - used in the variations of the themes */\r\n$tosic-header-background: #fff;\r\n$tosic-footer-background: $primary;\r\n$tosic-footer-color:      #fff;\r\n$tosic-link-decoration:   none;\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// 3. Special CSS for specific pages\r\n// The body tag always has things like tab-xx to say what page it's on. Use these to target special CSS.\r\n// Classes you can use are:\r\n// - tab-##\r\n// - tab-is-home (this class is only added on home)\r\n// - root-tab-## the top level tab which is activated, to allow different colors across an entire section\r\n// - lang-en / lang-de etc.\r\n\r\n// Set the width of the logo specifically for the home page only\r\n// .tab-is-home {\r\n//   header {\r\n//     .ly-logo {\r\n//       width: 250px;\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// 4. Variables we often override\r\n// These are placed after the bootstrap variables import, so that things like $gray already exist\r\n// Unocmment the lines you want to change, or get more from the ../../node_modules/bootstrap/scss/variables.scss\r\n\r\n// Fonts\r\n// stylelint-disable value-keyword-case\r\n$font-family-sans-serif: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\",sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\r\n$font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\r\n$font-family-base: $font-family-sans-serif;\r\n// stylelint-enable value-keyword-case\r\n\r\n// Links\r\n// Style anchor elements.\r\n// $link-color: $primary;\r\n// $link-decoration: none;\r\n// $link-hover-color: darken($link-color, 15%);\r\n// $link-hover-decoration: none;\r\n\r\n// Fonts\r\n// Font, line-height, and color for body text, headings, and more.\r\n// $font-size-base: 1rem; // Assumes the browser default, typically `16px`\r\n// $font-size-lg: ($font-size-base * 1.25);\r\n// $font-size-sm: ($font-size-base * .875);\r\n\r\n// $font-weight-light: 300;\r\n// $font-weight-normal: 400;\r\n// $font-weight-bold: 700;\r\n\r\n// $font-weight-base: $font-weight-normal;\r\n// $line-height-base: 1.42857;\r\n\r\n// $h1-font-size: $font-size-base * 2.125;\r\n// $h2-font-size: $font-size-base * 1.7;\r\n// $h3-font-size: $font-size-base * 1.25;\r\n// $h4-font-size: $font-size-base * 1.25;\r\n// $h5-font-size: $font-size-base;\r\n// $h6-font-size: $font-size-base;\r\n\r\n// $headings-font-family: inherit;\r\n// $headings-font-weight: 700;\r\n// $headings-line-height: 1.2;\r\n// $headings-color: inherit;\r\n\r\n// $display1-size: 6rem;\r\n// $display2-size: 5.5rem;\r\n// $display3-size: 4.5rem;\r\n// $display4-size: 3.5rem;\r\n\r\n// $display1-weight: 300;\r\n// $display2-weight: 300;\r\n// $display3-weight: 300;\r\n// $display4-weight: 300;\r\n// $display-line-height: $headings-line-height;\r\n\r\n// $lead-font-size: ($font-size-base * 1.25);\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// 5. Initialize the default bootstrap variables so they are ready\r\n// Tip: In VS-Code, Ctrl+Click on the link below to open the file\r\n@import \"../../node_modules/bootstrap/scss/variables\";\r\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}