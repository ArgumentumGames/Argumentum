@inherits ToSic.Sxc.Dnn.RazorComponent
<hide>
@RenderPage("_header.cshtml")
@{  
  var helpers = CreateInstance("../shared/_helpers.cshtml");
  var fancybox = CreateInstance("../shared/_fancybox.cshtml");
}
</hide>
@using ToSic.Razor.Blade;
@using System.Linq;
<trim>
<h2>Example from CSV</h2>
@fancybox.PreviewWithLightbox(App.Path + "/data/assets/query-products-csv.png", 400, 200, "float-right")
<p>
  CSV files are often used so website-owners can upload data from another system. This example shows us getting the CSV-file through a query and visualizing it here. You can read more about the <code>CsvDataSource</code> <a href="https://2sxc.org/en/Docs/Feature/feature/6528" target="_blank">here</a>.
</p>
</trim>
@{
  // get the query
  var query = App.Query["ProductsFromCSV"];

  // get the data from the query
  var products = AsList(query);

  // get the current author (if available) from the stream Current
  var current = AsList(query["Current"]).FirstOrDefault();
}
<ul>
  @foreach(var product in products) {
    <!-- this li will have class=selected if it's the current one -->
    <li class='@(product == current ? "selected" : "")'>
      <!-- this creates a link to the current tutorial (data220) and product=id -->
      <a href='@Link.To(parameters: "data230/true/product/" + product.EntityId)'>
        @product.Name (#@product.Id)
      </a>
      @if(current == product) {
        <br>
        <em>
          @current.Description 
          (<a href="@product.Link" target="_blank">find out more</a>)
        </em>
      }
    </li>
  }
</ul>

<hide>
@RenderPage("../shared/_source-code.cshtml", new { Path = VirtualPath }) 

@RenderPage("../shared/_source-code.cshtml", new { 
  Path = VirtualPath,
  File = "assets/products.csv",
  Size = 400, 
  Type = "csv"
}) 
</hide>