@inherits ToSic.Sxc.Dnn.RazorComponent
<hide>
@RenderPage("_header.cshtml")
@{  var helpers = CreateInstance("../shared/_helpers.cshtml"); }
</hide>
@{
  // check if we have a url-parameter called "id" with a value
  int id;
  // showdetails will be true, if urlId had a number
  var showDetails = Int32.TryParse(Request.QueryString["id"], out id);
}
<trim>
<h2>Basic List Details using Code - with separate Details-File</h2>
<p>
  Very often you have a list of items, and then a details-page showing just one item. In this example, we'll just use code to do this (so no visual query) - just so you understand the principle. This example splits the list/details templates into 3 files, which is easier to manage. File 1 choses what should happen, file 2 contains the list, and file 3 the details. 
</p>
<p>
  Since we'll look for the desired item in code, we'll use LINQ. To learn more about that, check out the @helpers.TutLink("LINQ Tutorials", "linq").
</p>
</trim>
@if(!showDetails) {
  @RenderPage("_611-list.cshtml")
} else {
  @RenderPage("_611-details.cshtml", new { Id = id })
}

<hide>
@RenderPage("../shared/_source-code.cshtml", new { Path = VirtualPath }) 

@RenderPage("../shared/_source-code.cshtml", new { 
  Path = VirtualPath,
  File = "611-list",
  Size = 400, 
}) 

@RenderPage("../shared/_source-code.cshtml", new { 
  Path = VirtualPath,
  File = "611-details",
  Size = 400, 
}) 
</hide>