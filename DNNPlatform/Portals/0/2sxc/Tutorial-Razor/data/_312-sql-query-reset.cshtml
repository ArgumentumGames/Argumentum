@inherits ToSic.Sxc.Dnn.RazorComponent
<hide>
@RenderPage("_header.cshtml")
@{  
  var helpers = CreateInstance("../shared/_helpers.cshtml");
  var fancybox = CreateInstance("../shared/_fancybox.cshtml");
  var width = 200;
  var height = 200;
}
</hide>
@using ToSic.Razor.Blade;
@using System.Linq;
<trim>
<h2>Using an App.Query multiple times</h2>
<div class="float-right" style="width: 50%">
  @fancybox.PreviewWithLightbox(App.Path + "/data/assets/sql-query-dnn-files.png", width, height, "float-left", label: "Query Tree") 
  @fancybox.PreviewWithLightbox(App.Path + "/data/assets/sql-query-configuration.png", width, height, "float-left", label: "Query Configuration with Params and Test-Values")
  @fancybox.PreviewWithLightbox(App.Path + "/data/assets/sql-query-select-statement.png", width, height, "float-left", label: "SQL Query using Params")
</div>


<p>
  The previous examples showed how to use an <code>App.Query</code>. 
  Now we want to run the query twice, which requires a <code>Reset()</code>. <br/>
  Note that the parameter <code>PortalId</code> is preset to be <code>[Portal:PortalId]</code>. 
  Read about <a href="https://r.2sxc.org/QueryParams" target="_blank">params in the docs</a>.
</p>
<hr>

</trim>
@{
  // get the query and ask for the "Default" results as a dynamic List
  var query = App.Query["DnnFilesFromSql"];
  var currentFiles = AsList(query);
  query.Reset();
  query.Params("PortalId", "0");
  var rootFiles = AsList(query);
}
<h2>files from the current Portal</h2>
<ul>
  @foreach(var file in currentFiles) {
    <li>@file.FileName</li>
  }
</ul>

<hr>
<h2>Files from the root portal</h2>
<ul>
  @foreach(var file in rootFiles) {
    <li>@file.FileName</li>
  }
</ul>



<hide>
@RenderPage("../shared/_source-code.cshtml", new { Path = VirtualPath }) 
</hide>