@inherits ToSic.Sxc.Dnn.RazorComponent
@* tell 2sxc that we'll use the js API *@
@Edit.Enable(js:true)
<hide>
@RenderPage("_header.cshtml")
</hide>

<trim>
<h2>WebApi with Polymorph Editions</h2>
<p>
  You often need to make changes on a live site (open-heart-surgery) without affecting the users. For this, you should have two copies of the API Controller - one live, and one staging. This is done by doing the following: 
</p>
<ol>
  <li>Place the live, tested controller in <code>/live/api/</code> and make sure your JavaScript accesses this</li>
  <li>Place a copy in <code>/staging/api/</code> or something similar (you can use other path names as well) and make your development JavaScript access that endpoint</li>
  <li>Then you can develop without hurting the live output.</li>
  <li>Once it's stable, you then deploy by copying the new controller to <code>/live/api/</code></li>
</ol>

<p>
  Click to see the result of the two calls, one to live, one to staging:
</p>
</trim>
<button type="button" class="btn btn-primary" onclick="callBasicHello(this, 'live')">
  Get Hello from live
</button> 
<button type="button" class="btn btn-primary" onclick="callBasicHello(this, 'dev')">
  Get Hello from dev
</button> 

<script>
  function callBasicHello(moduleContext, edition) {
    $2sxc(moduleContext)
      .webApi.get('app/auto/' + edition + '/api/demo/hello')
      .then(function (results) {
        alert(results);      
      });
  }
</script>

<hide>
@RenderPage("../shared/_source-code.cshtml", new { Path = VirtualPath }) 

@RenderPage("../shared/_source-code.cshtml", new { 
  Path = App.PhysicalPath + "/live/api/",
  File = "DemoController.cs",
  Size = 300,
  Language = "csharp",
  TitlePath = "/live/api/",
}) 

@RenderPage("../shared/_source-code.cshtml", new { 
  Path = App.PhysicalPath + "/dev/api/",
  File = "DemoController.cs",
  Size = 300,
  Language = "csharp",
  TitlePath = "/dev/api/",
}) 
</hide>