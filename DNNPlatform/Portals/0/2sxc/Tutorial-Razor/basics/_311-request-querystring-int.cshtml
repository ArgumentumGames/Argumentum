@inherits ToSic.Sxc.Dnn.RazorComponent
<hide>
@RenderPage("_header.cshtml")
@{  var hlp = CreateInstance("../shared/_helpers.cshtml"); }
</hide>
@using ToSic.Razor.Blade;
<trim>
<h2>Working with <em>number</em> URL Parameters</h2>
<p>
  When you expect a number, you usually need to convert it to an <code>int</code> or similar for further use. Otherwise you'll be comparing numbers with strings. For example <code>if(3 == "3")</code> would return <code>false</code> - which is not what you usually want. <br>
  Additionally, you usually want to ensure that if no parameter is found, you will have a default value - otherise you may run into errors.
</p>
<ul>
  @SubpageLink("This page without additional params", "")
  @SubpageLink("put ?id=27 in the url", "id=27")
</ul>
<hr>
</trim>
@{
  // this variable is a string, but could be null or empty
  var idAsString = Request.QueryString["id"];

  // this one is better - Text.First ensures that we have a value
  var idAsStringWithFallback = Text.First(Request.QueryString["id"], "0");

  // let's convert to a real number (int)
  var id = Int32.Parse(idAsStringWithFallback);
}
<ul>
  <li>
    <strong>Raw id from URL:</strong> @idAsString <br>
    Equal to string "27": @(idAsString == "27") <br>
    Equal to number 27: (would throw error) <br>
  </li>
  <li>
    <strong>Safe id from URL:</strong> @idAsStringWithFallback <br>
    Equal to string "27": @(idAsStringWithFallback == "27") <br>
    Equal to number 27: (would throw error) <br>
  </li>
  <li>
    <strong>Number id from URL:</strong> @id <br>
    Equal to string "27": (would throw error) <br>
    Equal to number 27: @(id == 27) <br>
  </li>
</ul>



<trim>
<hr>
<h3>More Links about converting strings to numbers</h3>
<ol>
  @hlp.LiExtLink("https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/how-to-convert-a-string-to-a-number", "Documentation from MSDN")

</ol>

</trim>



<hide>
@helper SubpageLink(string label, string urlparams) {
  <li>
    <a href='@Link.To(parameters: "?basics311=page&" + urlparams)'>
      @label
    </a>
  </li>

}
@RenderPage("../shared/_source-code.cshtml", new { Path = VirtualPath }) 
</hide>