@inherits ToSic.Sxc.Dnn.RazorComponent
@using System.Linq;
@using Dynlist = System.Collections.Generic.IEnumerable<dynamic>;

@{
  var persons = AsList(App.Data["Persons"]);
  var books = AsList(App.Data["Books"]);
}

@RenderPage("_header.cshtml")

<h2>Accessing Authors, a List inside of Books</h2>

<h3>Basic Use of List book.Authors</h3>
<p>This example shows the books, and we want to LINQ on the Authors. We must tell the compiler it's a list, so that LINQ can use <code>Select(...)</code>.</p>
<ol>
  @foreach(var book in books) {
    // To work with a list coming off a dynamic object, we have to tell the compiler it's a dynamic list
    var authors = (book.Authors as Dynlist)
      .Select(a => a.FirstName + " " + a.LastName);

    <li><strong>@book.Title</strong>
      by @string.Join(", ", authors.OrderBy(ln => ln)) 
    </li>
  }
</ol>

<hr>
<h3>OrderBy Amount of Authors</h3>
<p>This example shows Z-A ordering, where we count the authors to sort.</p>
<ol>
  @foreach(var book in books.OrderByDescending(p => p.Authors.Count)) {
    var authors = (book.Authors as Dynlist).Select(a => a.FirstName + " " + a.LastName);
    <li><strong>@book.Title</strong> 
      by @string.Join(",", authors.OrderBy(ln => ln)) (@book.Authors.Count author) 
    </li>
  }
</ol>

<hide>
@RenderPage("../shared/_source-code.cshtml", new { Path = VirtualPath }) 
</hide>