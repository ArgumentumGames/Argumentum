<hide>
@inherits ToSic.Sxc.Dnn.RazorComponent
@RenderPage("_header.cshtml")
@{
  CreateInstance("Shared.cs").EnableEditForAnonymous(Edit);
}

<h2>2sxc Custom Color-Picker Input Field</h2>
<div class="alert alert-info">
  <p>
    2sxc 11 makes it very easy to create custom input fields using standard <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components" target="_blank">WebComponents</a>. 
    This example shows a color picker using <a href="https://simonwep.github.io/pickr/" target="_blank">Pickr</a>, a cool JS library. 
  </p>
  <p>You can learn how to:</p>
  <ul>
    <li>Use <code>connector.loadScript(...)</code> to load a js library</li>
    <li>Use <code>connector.data</code> to get the <code>value</code> and update it</li>
    <li>How to only update the data if you really change it (so users can cancel the dialog without being asked)</li>
    <li>How to save <code>null</code> to explicitly not save or reset a value</li>
    <li>Use <code>disconnectedCallback()</code> to destroy inner objects</li>
  </ul>
  </div>
<hr>
</hide>

<h2>String Color-Picker Custom Input Field</h2>
<p>
  This example shows a real string-field uses Pickr to provide a color picker. <br>
  Hit this edit button to have a look: @Edit.Toolbar(toolbar: new [] { "toolbar=empty", "+new?contentType=UiStringColorPickr" })
</p>

<hide>
@RenderPage("_warning-and-links.cshtml")

@RenderPage("../shared/_source-code.cshtml", new {
  Path = VirtualPath,
  File = "../system/field-string-app-color-pickr/index.js",
  Size = 2500,
  Language = "javascript",
  Title = "Source of [App]/system/field-string-app-color-pickr/index.js"
})
</hide>