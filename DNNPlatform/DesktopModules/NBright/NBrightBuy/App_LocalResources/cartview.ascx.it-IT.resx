<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddBill.Text" xml:space="preserve">
    <value>Aggiungi indirizzo di fatturazione</value>
  </data>
  <data name="addnewaddress.Text" xml:space="preserve">
    <value>Aggiungi nuovo indirizzo</value>
  </data>
  <data name="addressmessage.Text" xml:space="preserve">
    <value>Assicurati che il tuo indirizzo è completato correttamente, altrimenti il ​​vostro ordine potrebbe essere ritardato.</value>
  </data>
  <data name="AddShip.Text" xml:space="preserve">
    <value>Indirizzo di spedizione</value>
  </data>
  <data name="Back.Text" xml:space="preserve">
    <value>Indietro</value>
  </data>
  <data name="BillingAddress.Text" xml:space="preserve">
    <value>Indirizzo di fatturazione</value>
  </data>
  <data name="cartempty.Text" xml:space="preserve">
    <value>Nessun prodotto nel carrello</value>
  </data>
  <data name="CartstepsAddresses.Text" xml:space="preserve">
    <value>Indirizzi</value>
  </data>
  <data name="CartstepsConfirm.Text" xml:space="preserve">
    <value>Conferma</value>
  </data>
  <data name="CartstepsPayment.Text" xml:space="preserve">
    <value>Pagamento</value>
  </data>
  <data name="CartstepsProcess.Text" xml:space="preserve">
    <value>Processo di ordinazione</value>
  </data>
  <data name="CartstepsRecap.Text" xml:space="preserve">
    <value>Cestino</value>
  </data>
  <data name="CartstepsShipping.Text" xml:space="preserve">
    <value>Sommario</value>
  </data>
  <data name="chknews.Text" xml:space="preserve">
    <value>Ricevi la nostra newsletter</value>
  </data>
  <data name="chkterms.Text" xml:space="preserve">
    <value>Ho letto e accetto i termini</value>
  </data>
  <data name="cmdAddItem.Text" xml:space="preserve">
    <value>&lt;i class='fa fa-plus-square'&gt;&lt;/i&gt;</value>
  </data>
  <data name="cmdClearCart.confirm" xml:space="preserve">
    <value>Rimuovere tutti gli oggetti e annullare l'ordine?</value>
  </data>
  <data name="cmdClearCart.Text" xml:space="preserve">
    <value>Cancella Carrello</value>
  </data>
  <data name="cmdDeleteItem.Text" xml:space="preserve">
    <value>&lt;i class='fa fa-times-circle fa-2x'&gt;&lt;/i&gt;</value>
  </data>
  <data name="cmdRemoveItem.Text" xml:space="preserve">
    <value>&lt;i class='fa fa-minus-square'&gt;&lt;/i&gt;</value>
  </data>
  <data name="collectiontimes.Text" xml:space="preserve">
    <value>Collection Times</value>
  </data>
  <data name="confirm.Text" xml:space="preserve">
    <value>Confermare</value>
  </data>
  <data name="ForCollection.Text" xml:space="preserve">
    <value>Per Collezione</value>
  </data>
  <data name="ManageOrders.Text" xml:space="preserve">
    <value>Gestione ordini</value>
  </data>
  <data name="Next.Text" xml:space="preserve">
    <value>Prossimo</value>
  </data>
  <data name="Order.Text" xml:space="preserve">
    <value>Inviare Ordine</value>
  </data>
  <data name="PaymentComplete.Text" xml:space="preserve">
    <value>Pagamento Completo</value>
  </data>
  <data name="PaymentFailed.Text" xml:space="preserve">
    <value>Pagamento Fallito</value>
  </data>
  <data name="PlaceOrder.Text" xml:space="preserve">
    <value>Ordine</value>
  </data>
  <data name="Previous.Text" xml:space="preserve">
    <value>Precedente</value>
  </data>
  <data name="ProcessingDiv.Text" xml:space="preserve">
    <value>&lt;i class="fa fa-cog fa-spin fa-4x"&gt;&lt;/i&gt;</value>
  </data>
  <data name="returntostore.Text" xml:space="preserve">
    <value>Ritorna al Negozio</value>
  </data>
  <data name="SaveAddress.Text" xml:space="preserve">
    <value>Salva Indirizzo</value>
  </data>
  <data name="SaveAddress.Title" xml:space="preserve">
    <value>Salva Indirizzo nella Rubrica</value>
  </data>
  <data name="selectaddress.Text" xml:space="preserve">
    <value>Rubrica</value>
  </data>
  <data name="SelectBill.Text" xml:space="preserve">
    <value>Selezionare Indirizzo di Fatturazione</value>
  </data>
  <data name="SelectShip.Text" xml:space="preserve">
    <value>Selezionare Indirizzo di Spedizione</value>
  </data>
  <data name="ShippingAddress.Text" xml:space="preserve">
    <value>Indirizzo di Spedizione</value>
  </data>
  <data name="shippingoption1.data" xml:space="preserve">
    <value>Spedire all'indirizzo di fatturazione; Spedire a un indirizzo separato;Raccogliere da Negozio</value>
  </data>
  <data name="shippingoption1.datavalue" xml:space="preserve">
    <value>1;2;3</value>
  </data>
  <data name="shippingoption2.data" xml:space="preserve">
    <value>Usa indirizzo di fatturazione; Inserisci indirizzo di spedizione</value>
  </data>
  <data name="shippingoption2.datavalue" xml:space="preserve">
    <value>1; 2</value>
  </data>
  <data name="Totaltopay.Text" xml:space="preserve">
    <value>Totale da pagare</value>
  </data>
  <data name="txtItems.Text" xml:space="preserve">
    <value>Elemento/i</value>
  </data>
  <data name="UpdateCart.Text" xml:space="preserve">
    <value>Ricalcola</value>
  </data>
  <data name="UseBillingAddress.Text" xml:space="preserve">
    <value>Utilizzare l'Indirizzo di Fatturazione</value>
  </data>
  <data name="ViewOrder.Text" xml:space="preserve">
    <value>Visualizza Ordine</value>
  </data>
  <data name="YourBasket.Text" xml:space="preserve">
    <value>Il vostro Carrello</value>
  </data>
  <data name="txtItemslower.Text" xml:space="preserve">
    <value>elemento/i</value>
  </data>
</root>