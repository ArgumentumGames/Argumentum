<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Paramètres du formulaire de profil</value>
  </data>
	<data name="lbltheme.Help" xml:space="preserve">
    <value>Nom du thème à utiliser pour cette liste panier.</value>
  </data>
	<data name="lbltheme.Text" xml:space="preserve">
    <value>Thème : </value>
  </data>
	<data name="lblinputform.Help" xml:space="preserve">
    <value>Gabarit à utiliser pour le formulaire de saisie des données pour l'adresse.</value>
  </data>
	<data name="lblinputform.Text" xml:space="preserve">
    <value>Gabarit de saisie formulaire : </value>
  </data>
	<data name="lblemailtemplate.Help" xml:space="preserve">
    <value>E-mail à envoyer lorsqu'un profil est mis à jour. (Si laissé vide, aucun e-mail n'est envoyé)</value>
  </data>
	<data name="lblemailtemplate.Text" xml:space="preserve">
    <value>Gabarit e-mail : </value>
  </data>
	<data name="emailsubject.Text" xml:space="preserve">
    <value>Mise à jour du profil utilisateur</value>
  </data>
	<data name="lblclientrole.Help" xml:space="preserve">
    <value>Les utilisateurs recevront un message leur indiquant qu'ils doivent attendre que le rôle de sécurité "Client" leur soit attribué avant de pouvoir accéder à la boutique.  </value>
  </data>
	<data name="lblclientrole.Text" xml:space="preserve">
    <value>Activer le rôle de sécurité Client : </value>
  </data>
	<data name="lblredirecttab.Help" xml:space="preserve">
    <value>Page de redirection suite à mise à jour</value>
  </data>
	<data name="lblredirecttab.Text" xml:space="preserve">
    <value>Page de redirection : </value>
  </data>
	<data name="lblemailregisteredclienttemplate.Help" xml:space="preserve">
    <value>E-mail à envoyer au client à l'inscription. (Si laissé vide, aucun e-mail n'est envoyé)</value>
  </data>
	<data name="lblemailregisteredclienttemplate.Text" xml:space="preserve">
    <value>Gabarit de l'e-mail Inscription Client : </value>
  </data>
	<data name="lblemailregisteredtemplate.Help" xml:space="preserve">
    <value>E-mail envoyé au Manager lors de l'inscription d'un client. (Si laissé vide, aucun e-mail n'est envoyé)</value>
  </data>
	<data name="lblemailregisteredtemplate.Text" xml:space="preserve">
    <value>Gabarit Email Inscription : </value>
  </data>
</root>