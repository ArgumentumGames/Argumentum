<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Configuración de administrador de direcciones</value>
  <comment>Address Admin Settings</comment></data>
  <data name="lblbasicsettings.Text" xml:space="preserve">
    <value>General</value>
  <comment>General</comment></data>
  <data name="lbllistbody.Help" xml:space="preserve">
    <value>Plantilla que se utilizará como cuerpo de la dirección, esto se repite para cada dirección.</value>
  <comment>Template to be used as address body, this is repeated for each address.</comment></data>
  <data name="lbllistbody.Text" xml:space="preserve">
    <value>Cuerpo de dirección:</value>
  <comment>Address Body : </comment></data>
  <data name="lbllistfooter.Help" xml:space="preserve">
    <value>Plantilla que se utilizará como pie de página de la dirección.</value>
  <comment>Template to be used as Address footer.</comment></data>
  <data name="lbllistfooter.Text" xml:space="preserve">
    <value>Pie de página de la dirección:</value>
  <comment>Address Footer : </comment></data>
  <data name="lbllistheader.Help" xml:space="preserve">
    <value>Plantilla que se utilizará como encabezado de dirección.</value>
  <comment>Template to be used as Address header.</comment></data>
  <data name="lbllistheader.Text" xml:space="preserve">
    <value>Encabezado de dirección:</value>
  <comment>Address Header : </comment></data>
  <data name="lbltheme.Help" xml:space="preserve">
    <value>Nombre del tema que se utilizará para esta lista de direcciones.</value>
  <comment>Name of the theme to use for this Address list.</comment></data>
  <data name="lbltheme.Text" xml:space="preserve">
    <value>Tema :</value>
  <comment>Theme : </comment></data>
  <data name="lblinputform.Help" xml:space="preserve">
    <value>Plantilla que se utilizará como formulario de entrada de datos para la dirección.</value>
  <comment>Template to be used as the data entry form for the address.</comment></data>
  <data name="lblinputform.Text" xml:space="preserve">
    <value>Plantilla de formulario de entrada:</value>
  <comment>Input form Template : </comment></data>
  <data name="emailmanageropt.data" xml:space="preserve">
    <value>Solo en cambio de dirección predeterminada; en TODOS los cambios de dirección</value>
  <comment>On Default Address Change Only;On ALL Address Changes</comment></data>
  <data name="lblemailmanager.Help" xml:space="preserve">
    <value>Administrador de correo electrónico en caso de cambio de dirección</value>
  <comment>Email Manager on address change</comment></data>
  <data name="lblemailmanager.Text" xml:space="preserve">
    <value>Administrador de correo electrónico:</value>
  <comment>Email Manager : </comment></data>
  <data name="lblemailtemplate.Help" xml:space="preserve">
    <value>Correo electrónico que se enviará cuando se actualice una dirección.</value>
  <comment>Email to be sent when an address is updated.</comment></data>
  <data name="lblemailtemplate.Text" xml:space="preserve">
    <value>Plantilla de correo electrónico:</value>
  <comment>Email Template : </comment></data>
</root>