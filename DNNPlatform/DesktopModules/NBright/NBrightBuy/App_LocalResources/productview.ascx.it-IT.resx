<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addtobasket.Text" xml:space="preserve">
    <value>Acquistare</value>
  </data>
  <data name="addtobasketicon.Text" xml:space="preserve">
    <value>&lt;span title="Aggiungi al Carrello" class="fa-stack"&gt;
  &lt;i class="fa fa-stop fa-stack-2x"&gt;&lt;/i&gt;
  &lt;i class="fa fa-shopping-cart fa-stack-1x fa-inverse"&gt;&lt;/i&gt;
&lt;/span&gt;</value>
  </data>
  <data name="addtobasketicon-lg.Text" xml:space="preserve">
    <value>&lt;span title="Aggiungi al Carrello" class="fa-stack fa-lg"&gt;
  &lt;i class="fa fa-stop fa-stack-2x"&gt;&lt;/i&gt;
  &lt;i class="fa fa-shopping-cart fa-stack-1x fa-inverse"&gt;&lt;/i&gt;
&lt;/span&gt;</value>
  </data>
  <data name="choosemodel.Text" xml:space="preserve">
    <value>Seleziona modello</value>
  </data>
  <data name="code.Text" xml:space="preserve">
    <value>Codice</value>
  </data>
  <data name="convertor.Text" xml:space="preserve">
    <value>Convertitore di valuta</value>
  </data>
  <data name="currencyconvertormsg.Text" xml:space="preserve">
    <value>&lt;p&gt; Se non è già visualizzato, selezionare la valuta di destinazione e fare clic sul pulsante per la conversione. Il risultato viene calcolato sulla base del cambio di mercato degli attuali tassi. &lt;/p&gt;&lt;p&gt; Le banche e le altre istituzioni si fanno pagare le tasse per la conversione e la gestione di valute estere e quindi il prezzo finale sarà probabilmente una piccola percentuale superiore al risultato mostrato qui. Utilizzare questo solo come guida. &lt;/p&gt;&lt;p style="font-size:11px;font-style:italic"&gt;Questo è un servizio fornito da foreignexchangeresource.com&lt;/p&gt;</value>
  </data>
  <data name="dealer.Text" xml:space="preserve">
    <value>Commerciante</value>
  </data>
  <data name="dealerprice.Text" xml:space="preserve">
    <value>Prezzo Commerciante</value>
  </data>
  <data name="debugmode.Text" xml:space="preserve">
    <value>Modalità di debug è on - Caching è spento</value>
  </data>
  <data name="description.Text" xml:space="preserve">
    <value>Descrizione</value>
  </data>
  <data name="documentation.Text" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="download.Text" xml:space="preserve">
    <value>Scarica questo file &lt;i class='fa fa-download'&gt;&lt;/i&gt;</value>
  </data>
  <data name="downloadableproduct.Text" xml:space="preserve">
    <value>Questo è un prodotto scaricabile. Recuperarlo da questa pagina dopo l'acquisto, o attraverso un link fornito nella notifica di acquisto.</value>
  </data>
  <data name="edit.Text" xml:space="preserve">
    <value>Modifica</value>
  </data>
  <data name="editicon.Text" xml:space="preserve">
    <value>&lt;i title="Edita Prodotto" class="fa fa-edit"&gt;&lt;/i&gt;</value>
  </data>
  <data name="emailmsg.Text" xml:space="preserve">
    <value>Si prega di informare il prezzo di questo prodotto a</value>
  </data>
  <data name="emailprice.Text" xml:space="preserve">
    <value>E-mail per prezzo</value>
  </data>
  <data name="filebullets.Text" xml:space="preserve">
    <value>&lt;i class='fa-li fa fa-file-o'&gt;&lt;/i&gt;</value>
  </data>
  <data name="from.Text" xml:space="preserve">
    <value>Da parte di</value>
  </data>
  <data name="fromlower.Text" xml:space="preserve">
    <value>da parte di</value>
  </data>
  <data name="holidaymsg.Text" xml:space="preserve">
    <value>Chiuso per ferie</value>
  </data>
  <data name="instock.Text" xml:space="preserve">
    <value>Sì</value>
  </data>
  <data name="model.Text" xml:space="preserve">
    <value>Modello</value>
  </data>
  <data name="models.Text" xml:space="preserve">
    <value>Modelli</value>
  </data>
  <data name="noimage.Text" xml:space="preserve">
    <value>&lt;i class="fa fa-camera"&gt;&lt;/i&gt;</value>
  </data>
  <data name="normally.Text" xml:space="preserve">
    <value>Vendita al dettaglio normale</value>
  </data>
  <data name="onsale.Text" xml:space="preserve">
    <value>Offerta</value>
  </data>
  <data name="onsaleflag.Text" xml:space="preserve">
    <value>In Offerta!</value>
  </data>
  <data name="outofstock.Text" xml:space="preserve">
    <value>Esaurito</value>
  </data>
  <data name="outofstockflag.Text" xml:space="preserve">
    <value>Esaurito</value>
  </data>
  <data name="price.Text" xml:space="preserve">
    <value>Prezzo</value>
  </data>
  <data name="pricerequest.Text" xml:space="preserve">
    <value>Prezzo richiesto</value>
  </data>
  <data name="productunavailable.Text" xml:space="preserve">
    <value>Il prodotto è attualmente non disponibile.</value>
  </data>
  <data name="purchasabledocument.Text" xml:space="preserve">
    <value>Scarica qui dopo l'acquisto &lt;i class='fa fa-exclamation-circle'&gt;&lt;/i&gt;</value>
  </data>
  <data name="related.Text" xml:space="preserve">
    <value>Prodotti correlati</value>
  </data>
  <data name="remaining.Text" xml:space="preserve">
    <value>Rimanente</value>
  </data>
  <data name="reserved.Text" xml:space="preserve">
    <value>Riservato</value>
  </data>
  <data name="retail.Text" xml:space="preserve">
    <value>Al dettaglio</value>
  </data>
  <data name="return.Text" xml:space="preserve">
    <value>Ritorno</value>
  </data>
  <data name="returnicon.Text" xml:space="preserve">
    <value>&lt;span title="Ritorna alla lista" class="fa-stack"&gt;
  &lt;i class="fa fa-stop fa-stack-2x"&gt;&lt;/i&gt;
  &lt;i class="fa fa-reply fa-stack-1x fa-inverse"&gt;&lt;/i&gt;
&lt;/span&gt;</value>
  </data>
  <data name="saleprice.Text" xml:space="preserve">
    <value>Prezzo di vendita</value>
  </data>
  <data name="share.Text" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="stock.Text" xml:space="preserve">
    <value>Magazzino</value>
  </data>
  <data name="view.Text" xml:space="preserve">
    <value>Vedi</value>
  </data>
  <data name="viewicon.Text" xml:space="preserve">
    <value>&lt;span title="Informazioni" class="fa-stack"&gt;
  &lt;i class="fa fa-stop fa-stack-2x"&gt;&lt;/i&gt;
  &lt;i class="fa fa-search fa-stack-1x fa-inverse"&gt;&lt;/i&gt;
&lt;/span&gt;</value>
  </data>
  <data name="viewicon-lg.Text" xml:space="preserve">
    <value>&lt;span title="Vedi Dettagli" class="fa-stack fa-lg"&gt;
  &lt;i class="fa fa-stop fa-stack-2x"&gt;&lt;/i&gt;
  &lt;i class="fa fa-search fa-stack-1x fa-inverse"&gt;&lt;/i&gt;
&lt;/span&gt;</value>
  </data>
  <data name="wishlistadd.Text" xml:space="preserve">
    <value>Aggiungi ai preferiti</value>
  </data>
  <data name="wishlistaddicon.Text" xml:space="preserve">
    <value>&lt;span title="Aggiungi ai Favoriti" class="fa-stack"&gt;
  &lt;i class="fa fa-stop fa-stack-2x"&gt;&lt;/i&gt;
  &lt;i class="fa fa-star-o fa-stack-1x fa-inverse"&gt;&lt;/i&gt;
&lt;/span&gt;</value>
  </data>
  <data name="wishlistaddicon-lg.Text" xml:space="preserve">
    <value>&lt;span title="Aggiungi ai Favoriti" class="fa-stack fa-lg"&gt;
  &lt;i class="fa fa-stop fa-stack-2x"&gt;&lt;/i&gt;
  &lt;i class="fa fa-star-o fa-stack-1x fa-inverse"&gt;&lt;/i&gt;
&lt;/span&gt;</value>
  </data>
  <data name="wishlistremove.Text" xml:space="preserve">
    <value>Rimuovere dai preferiti</value>
  </data>
  <data name="wishlistremoveicon.Text" xml:space="preserve">
    <value>&lt;span title="Rimuovi dai Preferiti" class="fa-stack"&gt;
  &lt;i class="fa fa-stop fa-stack-2x"&gt;&lt;/i&gt;
  &lt;i class="fa fa-star fa-stack-1x fa-inverse"&gt;&lt;/i&gt;
&lt;/span&gt;</value>
  </data>
  <data name="wishlistremoveicon-lg.Text" xml:space="preserve">
    <value>&lt;span title="Rimuovi dai Preferiti" class="fa-stack fa-lg"&gt;
  &lt;i class="fa fa-stop fa-stack-2x"&gt;&lt;/i&gt;
  &lt;i class="fa fa-star fa-stack-1x fa-inverse"&gt;&lt;/i&gt;
&lt;/span&gt;</value>
  </data>
</root>