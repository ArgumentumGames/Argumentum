<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addressestab.Text" xml:space="preserve">
    <value>Mijn adressen</value>
  </data>
  <data name="adminemail.Help" xml:space="preserve">
    <value>E-mailadres van de beheerder van de winkel, dit is het standaardarchief e-mailadres verzenden.</value>
  </data>
  <data name="adminemail.Text" xml:space="preserve">
    <value>Beheerder</value>
  </data>
  <data name="backofficeexittab.Text" xml:space="preserve">
    <value>Back-Office Exit Page</value>
  </data>
  <data name="carttab.Help" xml:space="preserve">
    <value>Gebruikt Gebruikersbeheer/omleiden naar de pagina Winkelwagen wanneer bepaalde acties zijn gedaan.</value>
  </data>
  <data name="carttab.Text" xml:space="preserve">
    <value>Kassa</value>
  </data>
  <data name="cataloguemode.Text" xml:space="preserve">
    <value>Catalogus-modus</value>
  </data>
  <data name="checkoutpromocode.Text" xml:space="preserve">
    <value>Promo codeveld</value>
  </data>
  <data name="checkouttaxcode.Text" xml:space="preserve">
    <value>Fiscale codeveld</value>
  </data>
  <data name="copyorderto.Text" xml:space="preserve">
    <value>Kopiëren van bestelling naar E-mail</value>
  </data>
  <data name="currencysymbol.Text" xml:space="preserve">
    <value>Valutasymbool</value>
  </data>
  <data name="defaultthemefolder.Text" xml:space="preserve">
    <value>Standaard omslag van het thema</value>
  </data>
  <data name="devoptions.Text" xml:space="preserve">
    <value>Ontwikkelaar opties</value>
  </data>
  <data name="Enabled.Text" xml:space="preserve">
    <value>Ingeschakeld</value>
  </data>
  <data name="enabledealer.Text" xml:space="preserve">
    <value>Dealer inschakelen</value>
  </data>
  <data name="folderdocs.Text" xml:space="preserve">
    <value>Documentenmap</value>
  </data>
  <data name="folderimages.Text" xml:space="preserve">
    <value>Afbeeldingenmap</value>
  </data>
  <data name="folderuploads.Text" xml:space="preserve">
    <value>Upload map</value>
  </data>
  <data name="fontawesome.Text" xml:space="preserve">
    <value>Omvatten FontAwesome</value>
  </data>
  <data name="jqueryuicss.Text" xml:space="preserve">
    <value>Omvatten jQuery UI CSS</value>
  </data>
  <data name="jqueryuijs.Text" xml:space="preserve">
    <value>Omvatten jQuery UI JS</value>
  </data>
  <data name="manageremail.Help" xml:space="preserve">
    <value>CSV-lijst van manager e-mails.</value>
  </data>
  <data name="manageremail.Text" xml:space="preserve">
    <value>Manager</value>
  </data>
  <data name="minimumstocklevel.Text" xml:space="preserve">
    <value>Minimale voorraad</value>
  </data>
  <data name="ordermanagertab.Text" xml:space="preserve">
    <value>Mijn bestellingen</value>
  </data>
  <data name="orderprefix.Text" xml:space="preserve">
    <value>Volgorde voorvoegsel</value>
  </data>
  <data name="pageactions.Text" xml:space="preserve">
    <value>Paginahandelingen</value>
  </data>
  <data name="pagesize.Text" xml:space="preserve">
    <value>Pagina lengte</value>
  </data>
  <data name="paymenttab.Help" xml:space="preserve">
    <value>Tabblad waar de client zal worden omgeleid om een methode van betaling te selecteren.</value>
  </data>
  <data name="paymenttab.Text" xml:space="preserve">
    <value>Betaling</value>
  </data>
  <data name="productlisttab.Help" xml:space="preserve">
    <value>Gebruikt Gebruikersbeheer/omleiden naar de productpagina wanneer bepaalde acties zijn gedaan.</value>
  </data>
  <data name="productlisttab.Text" xml:space="preserve">
    <value>Productlijst</value>
  </data>
  <data name="profiletab.Text" xml:space="preserve">
    <value>Mijn profiel</value>
  </data>
  <data name="removelogo.confirm" xml:space="preserve">
    <value>Logo verwijderen?</value>
  </data>
  <data name="removelogo.Text" xml:space="preserve">
    <value>Verwijderen</value>
  </data>
  <data name="resetpasswordonclientvalidate.Text" xml:space="preserve">
    <value>Wachtwoord opnieuw instellen op Client validatie</value>
  </data>
  <data name="sendclientroleemail.Text" xml:space="preserve">
    <value>E-mail verzenden Client wanneer toegevoegd aan Client functie</value>
  </data>
  <data name="Settings.Text" xml:space="preserve">
    <value>Instellingen</value>
  </data>
  <data name="storagetypeclient.Help" xml:space="preserve">
    <value>Client cartid en andere klant specifieke gegevens kunnen worden opgeslagen als Cookies of SessionMemory</value>
  </data>
  <data name="storagetypeclient.Text" xml:space="preserve">
    <value>Opslag klanttype</value>
  </data>
  <data name="subscribenewsletter.Text" xml:space="preserve">
    <value>Nieuwsbrief Checkbox</value>
  </data>
  <data name="enablefilelogging.Text" xml:space="preserve">
    <value>Logbestand ingeschakeld</value>
  </data>
  <data name="enablefileloggingmsg.Text" xml:space="preserve">
    <value>Om daadwerkelijk een logfile te krijgen, dient aan DotNetNuke.Log4Net.config een logger en een appender te worden toegevoegd. Dat bestand bevind zich in de root van de DNN installatie.</value>
  </data>
</root>